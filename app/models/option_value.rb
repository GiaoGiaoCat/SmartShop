class OptionValue < ActiveRecord::Base
  # extends ...................................................................
  # includes ..................................................................
  acts_as_list scope: :option_type
  # relationships .............................................................
  belongs_to :option_type, class_name: 'Spree::OptionType', touch: true, inverse_of: :option_values
  # has_and_belongs_to_many :variants, join_table: 'spree_option_values_variants', class_name: "Spree::Variant"
  # validations ...............................................................
  validates :name, presence: true, uniqueness: { scope: :option_type_id }
  validates :presentation, presence: true
  # callbacks .................................................................
  # after_touch :touch_all_variants
  # scopes ....................................................................
  # additional config (i.e. accepts_nested_attribute_for etc...) ..............
  # class methods .............................................................
  # public instance methods ...................................................
  # protected instance methods ................................................
  # private instance methods ..................................................
  # private

  # def touch_all_variants
  #   variants.each(&:touch)
  #   variants.update_all(updated_at: Time.current)
  # end
end



