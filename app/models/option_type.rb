class OptionType < ActiveRecord::Base
  # extends ...................................................................
  # includes ..................................................................
  # relationships .............................................................
  # has_many :option_values, -> { order(:position) }, dependent: :destroy, inverse_of: :option_type
  # has_many :product_option_types, dependent: :destroy, inverse_of: :option_type
  # has_many :products, through: :product_option_types
  # has_and_belongs_to_many :prototypes
  # validations ...............................................................
  validates :name, presence: true, uniqueness: true
  validates :presentation, presence: true
  # callbacks .................................................................
  # after_touch :touch_all_products
  # scopes ....................................................................
  default_scope { order(:position) }
  # additional config (i.e. accepts_nested_attribute_for etc...) ..............
  # accepts_nested_attributes_for :option_values, reject_if: lambda { |ov| ov[:name].blank? || ov[:presentation].blank? }, allow_destroy: true
  # class methods .............................................................
  # public instance methods ...................................................
  # protected instance methods ................................................
  # private instance methods ..................................................
  # private

  # def touch_all_products
  #   products.each(&:touch)
  #   products.update_all(updated_at: Time.current)
  # end
end





